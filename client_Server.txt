HW
Client_Server

1) Прочиать про клиент-серверную архитектуру

- Архитектура, в которой сетевая нагрузка распределена между поставщиками услуг, которые называются СЕРВЕРЫ и заказчиками услуг КЛИЕНТЫ. 
(клиенты и серверы - некое програмное обеспечение)
- клиент-серверы взаимодействуют между собой через Сетевые-протоколы.
- клиент отправляет запрос (request) на сервер. Сервер обрабатывает запрос и отправляет клиенту ответ (response)

-Виды архитектуры:- двухуровневая(клиент-сервер)
                  - трехуровневая (клиент-сервер-база данных)

Типы клиентов:- Тонкий клиент
              - Толстый клиент
Тонкий клиент- это компьютер или программа- клиент, которая всю или большую часть задач 
               по обработке информации переносит на сервер (Браузер)
Толстый клиент- приложение, которое обеспечивает расширенную функциональность независимо
                от сервера (1С, онлайн-игры)
Веб-сайт- носит информационный характер, т.е. он состоит из неких веб-страниц объеденненых 
          между собой в единый ресурс.Сайт не предоставляет взаимодействия с нашей программой,
          т.е. пользователи не могут размещать свою информацию.
Веб-приложение- интерактивные компьютерные приложения, которые специально созданны для сети 
                интернет и позволяют пользователю вводить, получать данные (соцсети) 
Веб-сервис- прикладной интерфейс, который позволяет различным веб-приложениям взаимодействовать между собой.



2) Что ткое HTTP и HTTPS

HTTP-HyperText Transfer Protocol
    -протокол передачи гипертекста
    - набор правил передачи информации

HTTP состоит из :PAYLOAD- полезная нагрузка,то что нужно передать
                 HEADER- заголовки,служебная информация, т.е. здесь уже описывается как наша основная
                         часть файла должна передаваться.
   Запрос (request) <> Ответ (response)

Запрос содержит: - метод
                 - версия протокола
                 - хост машины (где расположенно приложение)
                 - заголовки( служебная информация, которая характеризует нашу основную часть)
Ответ содержит: - версия протокола
                - статус код ( говорит об успешности того как отвечает сервер)
                - дата отправки ответа
                - информация о сервере
                - хедеры, которые характеризуют осн.нагрузку

HTTPS- наша информация передается в неком зашифрованном виде.
        Это тот же HTTP протокол, но с надстройками шифрования. 
        Шифрование происходит с помощью протоколов SSL и TLS.       
        Ключи шифрования находятся на сервере, для расшифровки используются SSL-сертификаты


3) HTTP методы

C - creat - POST
R - read - GET
U - update - PUT
D - delete - DELETE

POST- происходит отправка полезной информации на сервер.
      т.е. наша оснавная часть содержится в теле нашего запроса.

GET- запросы информации на сервер.
     т.е. клиент запрашивает какуе-то информацию на сервере

PUT - отправляется какая-то информация на сервер, 
      что бы создать какой-то объект на сервере

DELETE- это удаление данных с нашего сервера

4) HTTP статус коды сервера

100-информационные сообщения
200- сообщения об успехе операции
300- сообщение о перенаправление,
     говорит о том, что информацию нам сервер вернул, 
     но нашел ее вдругом месте
400-ошибка на стороне клиента
400-запрос составлен не верно и сервер не смог его обработать
401-ввели неправильный логин и пароль
403- ввели правильный логин и пароль, но не хватает прав зайти на ресурс
404- когда наш клиент обращается к ресурсу. которого нет на сервере
500- ошибка на стороне сервера

5) Что такое ядро браузера 
 Ядро браузера- программа, которая преобразует содержимое веб-страницы
                (файлы HTML, XML, цифровые изображения и т.д.)
                и информацию о форматировании в интерактивное изображение 
                содержимого на экране

6) Какие браузеры какиие ядра используют
Bink- Chrome, Opera
Gecko- Firefox
Webkit- Apple safari

7) Что такое API

API- application programming interface
- интерфейс общения между двумя независимыми компонентами 
  ПО(програмное обеспечения); взаимодействие или способ взаимодействия

8. Что такое ендпоинты

-это само обращение к маршруту отдельнм HTTP методом.
-эндпоинт вполняютконкретную задау, принимают параметр и возвращают данне клиенту
- представляют некий шлюз, которй соединяетсерверне проесс с внешним интерфейсом.
простми словами- это адрес на которй отправляется сообщение.
 
9) URL (URI, URL, URN)

 URL- uniform resource locator
      уникальный адрес сайта в сети,
      который определяет его местонахождения в сети интернет
 URN- uniform resourse name
      неизменная последовательность символов 
      определяющая только имя некоторого ресурса
 URI- уникальный индефикатор, это обобщенное понятие 
      множества индефикаций нашего ресурса, который включает как URL и URN


10) Идемпотентные HTTP методы

-метод, при которых эффект на сервере от одного запроса такой же,
 как и от нескольких идентичных запросов такого же типа
-GET
-HEAD
-PUT
-DELETE 
-HEAD
-OPTIONS
-TRACE

11) Безопасные HTTP методы
 - предназначены только для получения информации и не должны изменять состояния сервера
 -HEAD
 -GET
 -OPTIONS
 -TRACE

12) Иденфикация, Аутентификация, Авторизация
Идентификация- проесс распознания пользователя по его идентификатору
Аутентификаия- проедура проверки подлиности, доказательство, то пользователь именно тот за кого себя выдает
Авторизация - предоставление определеннх прав

13) Что такое IP
-это уникальнй сетевой адрес узла в компьютерной сети, построеннй по протоколу ip

14) Что такое октаты в DNS
октет 8 битное значение одной из 4-х частей ипшника

15) Что такое порт, сколько портов у Linux сервера

Порт сервера- это цифровой индефикатор (набор цифр до 16Бит) программы,
              который используется для создания определенногоинтернет соеденения
              привязанного к IP-адресу.

            - с помощью портов сервер,на котором расположен определенный сайт, 
              распознает и фиксирует ваш IP адрес,создавая соеденение "сервер-ПК"

            - нужен что бы понимать какая информация для какой программы предназначенна из потока всей инфформации
              
16) Уровни OSI

1. Физический - на этом уровне происходит передача физических сигналов ( токи, свет,радио)
              - уровень проводов
              - Блютуз, wi-fi, инфракрасный порт
              - протокол: Ethernet - описывает как сигналы должны кодироваться, передаваться по проводам.

2. Канальный уровень - полученные сигналы с первого уровня кодируются в биты, 
                       которые компьютер может понять.
                Протоколы: Ethernet, CDP, PPP, MPLS

3.Сетевой уровень - происходит маршрутизация трафика.
                  - происходит DNS запрос и получаем IP- адрес
                  Протокол: ICMP

4.Транспортный - Обеспечивает передачу данных по сети
              Протоколы:TCP, UDP
5. Сенсорный уровень- управляет соединением
6. Уровень представления- преобразование форматов сообщений 
                        - кодирование и сжатие
7. Уровень приложения -уровень нужен, чтобы приложения имели доступ к сетевым службам

17) Хедеры http запросов
 - специальные параметры, которые несут определенную служебную информацию по HTTP протоколу
general Headers- основные, должны быть и в запросах и в ответах
Request Headers-заголовки запроса
Response Headers-заголовки ответов
Entity Headers-заголовки сущности
имеют вид: параметр:значение